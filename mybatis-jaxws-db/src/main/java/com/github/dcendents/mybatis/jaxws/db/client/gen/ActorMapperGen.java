package com.github.dcendents.mybatis.jaxws.db.client.gen;

import com.github.dcendents.mybatis.jaxws.db.model.Actor;
import com.github.dcendents.mybatis.jaxws.db.model.filter.ActorFilter;
import com.github.dcendents.mybatis.jaxws.db.model.gen.ActorGen;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

public interface ActorMapperGen {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int countByFilter(ActorFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int deleteByFilter(ActorFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    @Delete({
        "delete from public.actor",
        "where actor_id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    @Insert({
        "insert into public.actor (actor_id, first_name, ",
        "last_name, last_update)",
        "values (#{id,jdbcType=INTEGER}, #{firstName,jdbcType=VARCHAR}, ",
        "#{lastName,jdbcType=VARCHAR}, #{modifiedOn,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="select nextval('public.actor_actor_id_seq')", keyProperty="id", before=true, resultType=Integer.class)
    int insert(Actor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int insertSelective(Actor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    List<Actor> selectByFilterWithRowbounds(ActorFilter filter, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    List<Actor> selectByFilter(ActorFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "a.actor_id as a_actor_id, a.first_name as a_first_name, a.last_name as a_last_name, ",
        "a.last_update as a_last_update",
        "from public.actor a",
        "where a.actor_id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Actor selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int updateByFilterSelective(@Param("record") Actor record, @Param("example") ActorFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int updateByFilter(@Param("record") Actor record, @Param("example") ActorFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Actor record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.actor
     *
     * @mbggenerated
     */
    @Update({
        "update public.actor",
        "set first_name = #{firstName,jdbcType=VARCHAR},",
          "last_name = #{lastName,jdbcType=VARCHAR},",
          "last_update = #{modifiedOn,jdbcType=TIMESTAMP}",
        "where actor_id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Actor record);
}