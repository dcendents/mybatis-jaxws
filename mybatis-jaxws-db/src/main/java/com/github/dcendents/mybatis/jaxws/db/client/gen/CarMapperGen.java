package com.github.dcendents.mybatis.jaxws.db.client.gen;

import com.github.dcendents.mybatis.jaxws.db.model.Car;
import com.github.dcendents.mybatis.jaxws.db.model.filter.CarFilter;
import com.github.dcendents.mybatis.jaxws.db.model.gen.CarGen;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

public interface CarMapperGen {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int countByFilter(CarFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int deleteByFilter(CarFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    @Delete({
        "delete from public.car",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    @Insert({
        "insert into public.car (id, color, ",
        "no_wheels, last_update, ",
        "no_doors)",
        "values (#{id,jdbcType=INTEGER}, #{color,jdbcType=VARCHAR}, ",
        "#{noWheels,jdbcType=INTEGER}, #{modifiedOn,jdbcType=TIMESTAMP}, ",
        "#{noDoors,jdbcType=INTEGER})"
    })
    @SelectKey(statement="select nextval('public.vehicle_id_seq')", keyProperty="id", before=true, resultType=Integer.class)
    int insert(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int insertSelective(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    List<Car> selectByFilterWithRowbounds(CarFilter filter, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    List<Car> selectByFilter(CarFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "car.id as car_id, car.color as car_color, car.no_wheels as car_no_wheels, car.last_update as car_last_update, ",
        "car.no_doors as car_no_doors",
        "from public.car car",
        "where car.id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Car selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int updateByFilterSelective(@Param("record") Car record, @Param("example") CarFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int updateByFilter(@Param("record") Car record, @Param("example") CarFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    @Update({
        "update public.car",
        "set color = #{color,jdbcType=VARCHAR},",
          "no_wheels = #{noWheels,jdbcType=INTEGER},",
          "last_update = #{modifiedOn,jdbcType=TIMESTAMP},",
          "no_doors = #{noDoors,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Car record);
}