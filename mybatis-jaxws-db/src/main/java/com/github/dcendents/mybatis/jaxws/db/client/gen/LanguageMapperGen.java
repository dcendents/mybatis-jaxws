package com.github.dcendents.mybatis.jaxws.db.client.gen;

import com.github.dcendents.mybatis.jaxws.db.model.Language;
import com.github.dcendents.mybatis.jaxws.db.model.filter.LanguageFilter;
import com.github.dcendents.mybatis.jaxws.db.model.gen.LanguageGen;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

public interface LanguageMapperGen {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int countByFilter(LanguageFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int deleteByFilter(LanguageFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    @Delete({
        "delete from public.language",
        "where language_id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    @Insert({
        "insert into public.language (language_id, name, last_update)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=CHAR}, #{modifiedOn,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="select nextval('public.language_language_id_seq')", keyProperty="id", before=true, resultType=Integer.class)
    int insert(Language record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int insertSelective(Language record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    List<Language> selectByFilterWithRowbounds(LanguageFilter filter, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    List<Language> selectByFilter(LanguageFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "l.language_id as l_language_id, l.name as l_name, l.last_update as l_last_update",
        "from public.language l",
        "where l.language_id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    Language selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int updateByFilterSelective(@Param("record") Language record, @Param("example") LanguageFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int updateByFilter(@Param("record") Language record, @Param("example") LanguageFilter filter);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Language record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.language
     *
     * @mbggenerated
     */
    @Update({
        "update public.language",
        "set name = #{name,jdbcType=CHAR},",
          "last_update = #{modifiedOn,jdbcType=TIMESTAMP}",
        "where language_id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Language record);
}