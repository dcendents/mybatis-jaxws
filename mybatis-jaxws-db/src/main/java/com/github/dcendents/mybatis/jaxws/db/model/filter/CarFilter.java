package com.github.dcendents.mybatis.jaxws.db.model.filter;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CarFilter {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.car
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.car
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.car
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public CarFilter() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.car
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("car.id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("car.id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("car.id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("car.id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("car.id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("car.id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("car.id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("car.id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("car.id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("car.id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("car.id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("car.id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andColorIsNull() {
            addCriterion("car.color is null");
            return (Criteria) this;
        }

        public Criteria andColorIsNotNull() {
            addCriterion("car.color is not null");
            return (Criteria) this;
        }

        public Criteria andColorEqualTo(String value) {
            addCriterion("car.color =", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotEqualTo(String value) {
            addCriterion("car.color <>", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThan(String value) {
            addCriterion("car.color >", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorGreaterThanOrEqualTo(String value) {
            addCriterion("car.color >=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThan(String value) {
            addCriterion("car.color <", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLessThanOrEqualTo(String value) {
            addCriterion("car.color <=", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorLike(String value) {
            addCriterion("car.color like", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotLike(String value) {
            addCriterion("car.color not like", value, "color");
            return (Criteria) this;
        }

        public Criteria andColorIn(List<String> values) {
            addCriterion("car.color in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotIn(List<String> values) {
            addCriterion("car.color not in", values, "color");
            return (Criteria) this;
        }

        public Criteria andColorBetween(String value1, String value2) {
            addCriterion("car.color between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andColorNotBetween(String value1, String value2) {
            addCriterion("car.color not between", value1, value2, "color");
            return (Criteria) this;
        }

        public Criteria andNoWheelsIsNull() {
            addCriterion("car.no_wheels is null");
            return (Criteria) this;
        }

        public Criteria andNoWheelsIsNotNull() {
            addCriterion("car.no_wheels is not null");
            return (Criteria) this;
        }

        public Criteria andNoWheelsEqualTo(Integer value) {
            addCriterion("car.no_wheels =", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsNotEqualTo(Integer value) {
            addCriterion("car.no_wheels <>", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsGreaterThan(Integer value) {
            addCriterion("car.no_wheels >", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsGreaterThanOrEqualTo(Integer value) {
            addCriterion("car.no_wheels >=", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsLessThan(Integer value) {
            addCriterion("car.no_wheels <", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsLessThanOrEqualTo(Integer value) {
            addCriterion("car.no_wheels <=", value, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsIn(List<Integer> values) {
            addCriterion("car.no_wheels in", values, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsNotIn(List<Integer> values) {
            addCriterion("car.no_wheels not in", values, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsBetween(Integer value1, Integer value2) {
            addCriterion("car.no_wheels between", value1, value2, "noWheels");
            return (Criteria) this;
        }

        public Criteria andNoWheelsNotBetween(Integer value1, Integer value2) {
            addCriterion("car.no_wheels not between", value1, value2, "noWheels");
            return (Criteria) this;
        }

        public Criteria andModifiedOnIsNull() {
            addCriterion("car.last_update is null");
            return (Criteria) this;
        }

        public Criteria andModifiedOnIsNotNull() {
            addCriterion("car.last_update is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedOnEqualTo(Date value) {
            addCriterion("car.last_update =", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnNotEqualTo(Date value) {
            addCriterion("car.last_update <>", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnGreaterThan(Date value) {
            addCriterion("car.last_update >", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnGreaterThanOrEqualTo(Date value) {
            addCriterion("car.last_update >=", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnLessThan(Date value) {
            addCriterion("car.last_update <", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnLessThanOrEqualTo(Date value) {
            addCriterion("car.last_update <=", value, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnIn(List<Date> values) {
            addCriterion("car.last_update in", values, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnNotIn(List<Date> values) {
            addCriterion("car.last_update not in", values, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnBetween(Date value1, Date value2) {
            addCriterion("car.last_update between", value1, value2, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andModifiedOnNotBetween(Date value1, Date value2) {
            addCriterion("car.last_update not between", value1, value2, "modifiedOn");
            return (Criteria) this;
        }

        public Criteria andNoDoorsIsNull() {
            addCriterion("car.no_doors is null");
            return (Criteria) this;
        }

        public Criteria andNoDoorsIsNotNull() {
            addCriterion("car.no_doors is not null");
            return (Criteria) this;
        }

        public Criteria andNoDoorsEqualTo(Integer value) {
            addCriterion("car.no_doors =", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsNotEqualTo(Integer value) {
            addCriterion("car.no_doors <>", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsGreaterThan(Integer value) {
            addCriterion("car.no_doors >", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsGreaterThanOrEqualTo(Integer value) {
            addCriterion("car.no_doors >=", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsLessThan(Integer value) {
            addCriterion("car.no_doors <", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsLessThanOrEqualTo(Integer value) {
            addCriterion("car.no_doors <=", value, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsIn(List<Integer> values) {
            addCriterion("car.no_doors in", values, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsNotIn(List<Integer> values) {
            addCriterion("car.no_doors not in", values, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsBetween(Integer value1, Integer value2) {
            addCriterion("car.no_doors between", value1, value2, "noDoors");
            return (Criteria) this;
        }

        public Criteria andNoDoorsNotBetween(Integer value1, Integer value2) {
            addCriterion("car.no_doors not between", value1, value2, "noDoors");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.car
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.car
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}